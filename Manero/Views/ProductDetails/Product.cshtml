@model Manero.Models.Entities.ProductDetailsEntity
@inject ProductDetailsService productService
@inject ReviewService reviewService


@{
    var product = await productService.GetAsync(x => x.ProductId == Model.ProductId);
    var reviews = await reviewService.GetReviewsByProductIdAsync(product.ProductId);
    var latestReviews = await reviewService.GetLatestReviewsByProductIdAsync(product.ProductId, 3);
    var roundedPrice = Math.Round(@product.Price, 2);
}


<section class="top-bar">
    <div class="container">
        <a asp-controller="Home" asp-action="Index"><i class="fa-sharp fa-solid fa-chevron-left"></i></a>
        <h4>MANERO</h4>
        <button>
            <i class="fa-light fa-bag-shopping"></i>
        </button>
    </div>
</section>

<div class="product-details">
    <div class="container">
        <div class="product-details-image">
            <img src="~/images/emptyImage.png" alt="">

            <nav class="nav-pagination">
                <button class="current dots  first "></button>
                <button class="dots second"></button>
                <button class="dots third"></button>
            </nav>

        </div>
        <hr>

        <div class="info">
            <div class="name-and-heart">
                <h3><b>@product.Name</b></h3>
                <i class="fa-light fa-heart"></i>
            </div>

            <div class="rating">
                @{
                    char filledStarSymbol = '\u2605';
                    char emptyStarSymbol = '\u2606';
                    string starColor = "#FFBE00";

                    List<int> ratings = reviews.Select(r => r.Rating).ToList();

                    double CalculateMedian(List<int> values)
                    {
                        values.Sort();

                        var count = values.Count;
                        var middle = count / 2;

                        if (count % 2 == 0)
                        {
                            return (values[middle - 1] + values[middle]) / 2.0;
                        }
                        else
                        {
                            return values[middle];
                        }
                    }

                    double median = CalculateMedian(ratings);
                    int totalStars = 5;

                    for (var i = 1; i <= totalStars; i++)
                    {
                        if (i <= median)
                        {
                            <span style="color: @starColor; font-size: 24px;">@filledStarSymbol</span>
                        }
                        else
                        {
                            <span style="color: @starColor; font-size: 24px;">@emptyStarSymbol</span>
                        }
                    }
                }
            </div>


            <div class="price-and-quantity">
                <div class="price">
                    $ @roundedPrice
                </div>

                <div class="quantity-selector">
                    <span onclick="decrementQuantity()">-</span>
                    <span id="quantity-display">1</span>
                    <span onclick="incrementQuantity()">+</span>
                </div>
            </div>



            <div class="product-selection">
                <form asp-action="ShoppingCart" method="post" novalidate>
                    <input type="hidden" asp-for="Size" id="size-value" />
                    <input type="hidden" asp-for="ProductColors" id="color-value" />
                    <input type="hidden" asp-for="Quantity" id="quantity-value" />

                    Size<br />
                    <div class="sizes">
                        <span class="size" data-value="XS" onclick="setSize('XS')">XS</span>
                        <span class="size" data-value="S" onclick="setSize('S')">S</span>
                        <span class="size" data-value="M" onclick="setSize('M')">M</span>
                        <span class="size" data-value="L" onclick="setSize('L')">L</span>
                        <span class="size" data-value="XL" onclick="setSize('XL')">XL</span>
                        <span class="size" data-value="XXL" onclick="setSize('XXL')">XXL</span>
                    </div>

                    Color
                    <div id="colors">
                        <span class="color" data-value="Red" onclick="setColor('Red')" style="color: red;">&#11044;</span>
                        <span class="color" data-value="Blue" onclick="setColor('Blue')" style="color: blue;">&#11044;</span>
                        <span class="color" data-value="Black" onclick="setColor('Black')" style="color: black;">&#11044;</span>
                        <span class="color" data-value="White" onclick="setColor('White')" style="color: white;">&#11044;</span>
                    </div>

                    Description <br />
                    <div class="product-details-description">
                        <p>@product.Description</p>
                    </div>

                    <button type="submit" class="button-theme">Add to Cart</button>
                </form>

            </div>



            <div class="reviews">
                <div class="review-and-view-all">
                    <h3>Reviews</h3><a asp-controller="Review" asp-action="AllReviews" asp-route-productId="@product.ProductId">view all<i class="fa-solid fa-arrow-right"></i></a>
                </div>

                @foreach (var review in latestReviews)
                {
                    <div class="each-review">

                        <div class="profile-pic"></div>

                        <div>
                            <div class="name-and-rating">
                                <p>Förnamn Efternamn</p>
                                <div class="rating">
                                    @{
                                   

                                        for (var i = 1; i <= 5; i++)
                                        {
                                            if (i <= review.Rating)
                                            {
                                                <span style="color: @starColor; font-size: 16px;">@filledStarSymbol</span>
                                            }
                                            else
                                            {
                                                <span style="color: @starColor; font-size: 16px;">@emptyStarSymbol</span>
                                            }
                                        }
                                    }
                                </div>
                             </div>

                            <p class="created-at">@review.CreatedAt.ToShortDateString()</p>
                            <p class="description">@review.Text</p>
                        
                        </div>
                    </div>
                }


            </div>

        </div>
    </div>
</div>


<script>
    function setSize(size) {
        document.getElementById('size-value').value = size;
        const sizes = document.querySelectorAll('.size');
        sizes.forEach(s => {
            if (s.getAttribute('data-value') === size) {
                s.classList.add('selected');
            } else {
                s.classList.remove('selected');
            }
        });
    }

    function setColor(color) {
        document.getElementById('color-value').value = color;
        const colors = document.querySelectorAll('.color');
        colors.forEach(c => {
            c.innerHTML = '&#11044;';
            c.classList.remove('selected');
        });
        const selectedColor = document.querySelector('.color[data-value="' + color + '"]');
        selectedColor.classList.add('selected');
    }


    function incrementQuantity() {
        const quantityDisplay = document.getElementById('quantity-display');
        const currentQuantity = parseInt(quantityDisplay.innerText);
        quantityDisplay.innerText = (currentQuantity + 1).toString();
        updateQuantityField();
    }

    function decrementQuantity() {
        const quantityDisplay = document.getElementById('quantity-display');
        const currentQuantity = parseInt(quantityDisplay.innerText);
        if (currentQuantity > 1) {
            quantityDisplay.innerText = (currentQuantity - 1).toString();
            updateQuantityField();
        }
    }

    function updateQuantityField() {
        const quantityField = document.getElementById('quantity-value');
        const quantityDisplay = document.getElementById('quantity-display');
        quantityField.value = quantityDisplay.innerText;
    }


</script>

<style>

    .star-rating {
        font-size: 30px;
        cursor: pointer;
    }
</style>